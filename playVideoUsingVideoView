private void startWatchVideo(final String url){
        try {
            final VideoView videoView = (VideoView) findViewById(R.id.myVideoView);
            final ProgressBar pbLoading = (ProgressBar) findViewById(R.id.pbVideoLoading);
            pbLoading.setVisibility(View.VISIBLE);
            MediaController mediaController = new MediaController(this);
            mediaController.setAnchorView(videoView);
            Uri video = Uri.parse(url);
            videoView.setMediaController(mediaController);
            videoView.setVideoURI(video);
            videoView.requestFocus();
            videoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
                @Override
                public void onPrepared(MediaPlayer mp) {
                    pbLoading.setVisibility(View.GONE);
                    mp.start();
                }
            });
            videoView.setOnErrorListener(new MediaPlayer.OnErrorListener() {
                @Override
                public boolean onError(MediaPlayer media, int what, int extra) {
                    if (what == 100)
                    {
                        videoView.stopPlayback();
                        startWatchVideo(url);
                    }
                    return true;
                }
            });
        } catch (Exception e) {
            // TODO: handle exception
            Toast.makeText(this, "Error connecting", Toast.LENGTH_SHORT).show();
        }
    }
